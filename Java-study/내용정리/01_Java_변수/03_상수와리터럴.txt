
★  상수

    상수는 변수와 마찬가지로 값을 저장할 수 있는 공간이다. 
    하지만 변수와 달리 한번 값을 저장하면 다른 값으로 변경할 수 없다는 특징을 가지고 있다.

    상수를 선언하는 예시는 다음과 같다.
    ```
        final int MAX_SPEED = 100;
    ```
    final 이라는 키워드를 붙여주면 상수로 선언할 수 있다.

    만약 상수를 선언과 동시에 할당하지 않고 선언만 했다면 
    한번만 할당할 수 있고 그 이후에 다른 값을 할당하려고 한다면 에러가 난다.
    ```
        final int MAX_SPEED;    // 상수 선언
        MAX_SPEED = 100;        // 상수에 100 이라는 값을 할당.
        MAX_SPEED = 200;        // ERROR. 이미 100 이라는 값이 할당되었기 때문에.
    ```
    상수 네이밍 규칙은 snake case 를 사용한다.
    단, 모든 문자는 대문자만 사용한다.


★  리터럴

    '변수' 는 하나의 값을 저장하기 위한 공간이다.
    '상수' 는 값을 한번만 저장할 수 있는 공간이다.
    '리터럴' 은 그 자체로 값을 의미하는 것이다.

    ```
        int year = 2023;
        final int MAX_SPEED = 100;
    ```
    위의 예시에서 year 은 '변수', MAX_SPEED 는 '상수', 
    2023 과 100 과 같은 것은 '리터럴' 이라고 한다.

    즉, 리터럴은 상수를 다르게 부르는 것이다.